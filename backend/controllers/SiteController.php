<?php
namespace backend\controllers;

use backend\components\Jwt;
use backend\components\QueueJob;
use phpDocumentor\Reflection\DocBlock\Tags\Var_;
use Yii;
use yii\data\ActiveDataProvider;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use backend\models\Admin;
use yii\log\EmailTarget;

/**
 * Site controller
 */
class SiteController extends BaseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'actions' => ['login', 'error','test'],
                        'allow' => true,
                    ],
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }

    public function actionTest(){
        $res =  Yii::$app->queue->push(new QueueJob([
            'url' => 'http://example.com/image.jpg',
            'file' => 'C:\work\ls\comlesu\common\test.txt',
        ]));
        var_dump($res);
        die;
        $token_test = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTU0MDgyMTk0NywiZXhwIjoxNTQwODI5MTQ3LCJuYmYiOjE1NDA4MjE5NDcsInN1YiI6Ind3dy5hZG1pbi5jb20iLCJqdGkiOiJiN2Y1ZWIxYjZlODRlNTcxZDQzNDc2NzJmYmZkOGJhMCIsImRhdGEiOnsiaWQiOjF9fQ.UJOJlfXiw8no6dbImqeIkGiODZ2T3U1PimawstEEH2w';
        $getPayload_test=\backend\components\Jwt::verifyToken($token_test);

        var_dump($getPayload_test);die;
        return $this->success();
    }

    /**
     * Login action.
     *
     * @return string
     */
    public function actionLogin()
    {

        $username = $this->request->post('username','');
        $password = $this->request->post('password','');
        if(empty($username) || empty($password)){
            return $this->error('用户名或密码不能为空');
        }
        $provider = new ActiveDataProvider([
            'query' => Admin::find()
                ->where(['username' => $username,'status'=>1])->asArray()->one(),
        ]);

        $result = $provider->query;

        if($result)
        {
            if (md5($password) === $result['password'])
            {
                /**
                 * {
                "iss": "admin",          //该JWT的签发者
                "iat": 1535967430,        //签发时间
                "exp": 1535974630,        //过期时间
                "nbf": 1535967430,         //该时间之前不接收处理该Token
                "sub": "www.admin.com",   //面向的用户
                "jti": "9f10e796726e332cec401c569969e13e"   //该Token唯一标识
                }
                 */
                $payload_test=array(
                    'iss'=>'comlesu',
                    'iat'=>time(),
                    'exp'=>time()+7200*150,
                    'nbf'=>time(),
                    'sub'=>'ls.com',
                    'jti'=>md5(uniqid('JWT').time()),
                    'data'=>array(
                        'uid'=>$result['id'],
                        'username' => $result['username'],
                        'realname' => $result['realname'],
                        'email' => $result['email'],
                    )
                );
                $token=Jwt::getToken($payload_test);
                return $this->success($token);
            } else {
                $msg = '密码错误';
                return $this->error($msg,1001);
            }
        } else {
            $msg = '用户名不存在';
            return $this->error($msg,1000);
        }


    }

    /**
     * Logout action.
     *
     * @return string
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }


}
