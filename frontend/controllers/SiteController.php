<?php
namespace frontend\controllers;

use common\models\Agent;
use frontend\components\Jwt;
use frontend\models\User;
use Yii;
use yii\data\ActiveDataProvider;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;

/**
 * Site controller
 */
class SiteController extends BaseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'actions' => ['login', 'error','register'],
                        'allow' => true,
                    ],
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }

    /**
     * Login action.
     *
     * @return string
     */
    public function actionLogin()
    {

        $username = $this->request->post('username','');
        $password = $this->request->post('password','');
        if(empty($username) || empty($password)){
            return $this->error('用户名或密码不能为空');
        }
        $provider = new ActiveDataProvider([
            'query' => User::find()
                ->where(['username' => $username,'status'=>1])->asArray()->one(),
        ]);

        $result = $provider->query;

        if($result)
        {
            if (md5($password) === $result['password'])
            {
                /**
                 * {
                "iss": "admin",          //该JWT的签发者
                "iat": 1535967430,        //签发时间
                "exp": 1535974630,        //过期时间
                "nbf": 1535967430,         //该时间之前不接收处理该Token
                "sub": "www.admin.com",   //面向的用户
                "jti": "9f10e796726e332cec401c569969e13e"   //该Token唯一标识
                }
                 */
                $payload_test=array(
                    'iss'=>'comlesu',
                    'iat'=>time(),
                    'exp'=>time()+7200*150,
                    'nbf'=>time(),
                    'sub'=>'ls.com',
                    'jti'=>md5(uniqid('JWT').time()),
                    'data'=>array(
                        'uid'=>$result['id'],
                        'username' => $result['username'],
                        'realname' => $result['realname'],
                        'email' => $result['email'],
                        'roles' => [$result['role']],
                    )
                );
                $token=Jwt::getToken($payload_test);
                $user = User::find()->where(['username'=>$username])->one();
                if($user)
                {
                    $user->last_login_time = time();
                    $user->last_login_ip = Yii::$app->request->userIP;
                    $user->login_count = $user->login_count + 1;
                    if($user->validate())
                    $user->save();
                }
                return $this->success($token);
            } else {
                $msg = '密码错误';
                return $this->error($msg,1001);
            }
        } else {
            $msg = '用户名不存在';
            return $this->error($msg,1000);
        }
    }


    /**
     * Register action.
     *
     * @return string
     */
    public function actionRegister()
    {
        //Yii::$app->request->
        $username = $this->request->post('username','');
        $password = $this->request->post('password','');
        $password2 = $this->request->post('password2','');
        if(empty($username) || empty($password)){
            return $this->error('用户名或密码不能为空');
        }
        if($password != $password2)
            return $this->error('两次密码不一致');

        $count = User::find()->where(['username'=>$username])->count();
        if($count >0)
            return $this->error('帐号存在');

        $result = $this->hostToType();
        $model = new \common\models\User();
        $model->username = $username;
        $model->password = md5($password);
        $model->email = $username;
        $model->registsource = $result['type'];
        $model->agentid = $result['agentid'];
        if($model->validate() && $model->save() )
        {
            $payload_test=array(
                'iss'=>'comlesu',
                'iat'=>time(),
                'exp'=>time()+7200*150,
                'nbf'=>time(),
                'sub'=>'ls.com',
                'jti'=>md5(uniqid('JWT').time()),
                'data'=>array(
                    'uid'=>$model->id,
                    'username' =>$model->username,
                    'realname' => $model->realname,
                    'email' => $model->email,
                    'roles' => [$model->role],
                )
            );

            $token=Jwt::getToken($payload_test);
            return $this->success($token);
        }
        return $this->error('注册失败');
    }

    public function hostToType()
    {
        $restul = ['type'=>'cdn-w','agentid'=>0];
        $host = Yii::$app->request->getHostInfo();
        $data = parse_url($host);
        $domain = $data['host'];
        $list = Agent::find()->select('id,area,domain')->where(['like','domain',$domain])->asArray()->all();
        if($list){
            foreach ($list as $value)
            {
                if(!empty($value['domain']))
                {
                    $exp = explode(",",$value['domain']);
                    if(in_array($domain,$exp))
                    {
                        $restul =  ['type'=>$value['area'],'agentid'=>$value['id']];
                        return $restul;
                    }
                }
            }
        }
        return $restul;
    }


    /**
     * Logout action.
     *
     * @return string
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }


}
